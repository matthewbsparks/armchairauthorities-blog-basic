---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

const posts = await getCollection("blog");
const tags = [...new Set(posts.flatMap((post) => post.data.tags))];
const tagCounts = tags.reduce(
    (acc, tag) => {
        acc[tag] = posts.filter((post) => post.data.tags.includes(tag)).length;
        return acc;
    },
    {} as Record<string, number>,
);
---

<Layout title="Tags - Armchair Authorities">
    <main>
        <h1>Tags</h1>
        <div class="tags-grid">
            {
                tags.map((tag) => (
                    <a href={`/tags/${tag}`} class="tag">
                        <span class="name">{tag}</span>
                        <span class="count">{tagCounts[tag]}</span>
                    </a>
                ))
            }
        </div>
    </main>
</Layout>

<style>
    main {
        padding: 2rem;
        max-width: 1400px;
        margin: 0 auto;
        background: var(--background);
        min-height: calc(100vh - 200px);
        transition: background-color 0.3s ease;
    }
    h1 {
        margin-bottom: 2rem;
        color: var(--text-primary);
        font-family: "Playfair Display", serif;
        font-size: 2.5rem;
        font-weight: 700;
    }
    .tags-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 2rem;
    }
    .tag {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 1rem;
        background: var(--tag-bg, #ffffff);
        border: 1px solid var(--tag-border, var(--border));
        border-radius: 8px;
        text-decoration: none;
        color: var(--text-primary);
        transition:
            transform 0.2s ease,
            background-color 0.3s ease,
            border-color 0.3s ease,
            box-shadow 0.3s ease;
        box-shadow: 0 2px 8px var(--shadow);
    }

    /* Dark theme tag styling */
    [data-theme="dark"] .tag {
        --tag-bg: #0d1117;
        --tag-border: #30363d;
    }

    .tag:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px var(--shadow);
    }

    /* Dark theme tag hover */
    [data-theme="dark"] .tag:hover {
        border-color: #484f58;
    }

    .name {
        font-weight: 500;
        font-family: "Playfair Display", serif;
    }

    .count {
        background: var(--count-bg, var(--accent));
        color: var(--count-text, #ffffff);
        padding: 0.25rem 0.5rem;
        border-radius: 999px;
        font-size: 0.875rem;
        font-weight: 600;
        transition:
            background-color 0.3s ease,
            color 0.3s ease;
    }

    /* Dark theme count styling */
    [data-theme="dark"] .count {
        --count-bg: #58a6ff;
        --count-text: #0d1117;
    }

    @media (max-width: 1200px) {
        .tags-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }
    @media (max-width: 900px) {
        .tags-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }
    @media (max-width: 600px) {
        .tags-grid {
            grid-template-columns: 1fr;
        }
        main {
            padding: 1rem;
        }
    }
</style>
