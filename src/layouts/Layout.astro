---
import { getCollection } from "astro:content";
import DarkModeToggle from "../components/DarkModeToggle.astro";
import "../styles/mdx-styling.css";

interface Props {
    title: string;
}

const { title } = Astro.props;
const pages = await getCollection("page");
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Low Power Computing Blog" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap"
            rel="stylesheet"
        />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>

        <script>
            // Theme initialization script - prevents FOUC (Flash of Unstyled Content)
            (function () {
                function getStoredTheme() {
                    if (typeof localStorage !== "undefined") {
                        return localStorage.getItem("theme");
                    }
                    return null;
                }

                function getPreferredTheme() {
                    const stored = getStoredTheme();
                    if (stored) {
                        return stored;
                    }

                    return window.matchMedia &&
                        window.matchMedia("(prefers-color-scheme: dark)")
                            .matches
                        ? "dark"
                        : "light";
                }

                const theme = getPreferredTheme();
                document.documentElement.setAttribute("data-theme", theme);
            })();
        </script>
    </head>
    <body>
        <header>
            <nav>
                <div class="nav-left">
                    <a href="/" class="logo">
                        <!-- <svg
                            width="40"
                            height="40"
                            viewBox="0 0 40 40"
                            fill="none"
                        >
                            <circle
                                cx="20"
                                cy="20"
                                r="19"
                                stroke="currentColor"
                                stroke-width="2"></circle>
                            <path
                                d="M12 20C12 25 16 28 20 28C24 28 28 25 28 20C28 15 24 12 20 12"
                                stroke="currentColor"
                                stroke-width="2"></path>
                        </svg> -->
                        <h1>Armchair Authorities</h1>
                    </a>
                </div>
                <div class="nav-right">
                    <a href="/tags" class="nav-link">Tags</a>
                    {
                        pages.map((page) => (
                            <a href={`/${page.id}`} class="nav-link">
                                {page.data.title}
                            </a>
                        ))
                    }
                    <DarkModeToggle />
                </div>
            </nav>
        </header>
        <slot />
        <footer>
            <p>&copy; 2025 Armchair Authorities.</p>
        </footer>
    </body>
</html>
<style>
    :root {
        /* Light theme colors (default) */
        --text-primary: #1a1a1a;
        --text-secondary: #4a4a4a;
        --background: #f5f5f5;
        --accent: #2d2d2d;
        --border: #e0e0e0;
        --hover-bg: rgba(0, 0, 0, 0.05);
        --shadow: rgba(0, 0, 0, 0.1);
    }

    /* Dark theme colors */
    [data-theme="dark"] {
        --text-primary: #f0f6fc;
        --text-secondary: #8b949e;
        --background: #010409;
        --accent: #30363d;
        --border: #30363d;
        --hover-bg: rgba(255, 255, 255, 0.08);
        --shadow: rgba(0, 0, 0, 0.5);
    }
    html {
        font-family: system-ui, sans-serif;
        background: var(--background);
        color: var(--text-primary);
        transition:
            background-color 0.3s ease,
            color 0.3s ease;
    }
    body {
        margin: 0;
        padding: 0;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }
    header {
        padding: 2rem;
        border-bottom: 1px solid var(--border);
        background: var(--background);
    }
    nav {
        display: flex;
        align-items: center;
        justify-content: space-between;
        max-width: 1400px;
        margin: 0 auto;
        width: 100%;
    }
    .nav-left,
    .nav-right {
        display: flex;
        align-items: center;
        gap: 1.5rem;
    }
    .logo {
        display: flex;
        align-items: center;
        gap: 1rem;
        color: var(--text-primary);
        text-decoration: none;
    }
    .logo:hover {
        opacity: 0.8;
    }
    .logo h1 {
        margin: 0;
        font-size: 1.5rem;
        font-family: "Playfair Display", serif;
    }
    .nav-link {
        color: var(--text-primary);
        font-size: 1.4rem;
        text-decoration: none;
        font-weight: 600;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        transition: background-color 0.2s ease;
        font-family: "Playfair Display", serif;
    }
    .nav-link:hover {
        background-color: var(--hover-bg);
    }
    footer {
        margin-top: auto;
        padding: 2rem;
        text-align: center;
        border-top: 1px solid var(--border);
        color: var(--text-secondary);
        background: var(--background);
    }
    article img {
        border-radius: 8px;
        box-shadow: 0 6px 16px var(--shadow);
        transition:
            transform 0.25s ease,
            box-shadow 0.25s ease;
    }
    article img:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 24px var(--shadow);
    }
</style>
